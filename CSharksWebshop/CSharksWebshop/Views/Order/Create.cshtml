@model CSharksWebshop.Models.Order
@using CSharksWebshop.Models;

@{
    ViewBag.Title = "Create";
    List<Address> addresses = Order.UserAddresses(User);
    UserData currentUser = ViewBag.CurrentUser as UserData;
}

<div class="container">
    <div class="row">

        <div class="col-sm-6 col-md-5 col-lg-12 mx-auto">
            <h4>Order</h4>
            <hr />
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })                  
                    
                    @if (User.Identity.IsAuthenticated == false)
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PostCode, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.PostCode, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PostCode, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control"} })
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.HouseNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.HouseNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.HouseNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.UserEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.UserEmail, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserEmail, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                    else
                    {
                        <div>Last name: @currentUser.LastName</div>
                        <div>First name: @currentUser.FirstName</div>
                        for (int i = 0; i < addresses.Count; i++)
                        {
                            <div class="card bg-light mb-3" style="max-width: 20rem;">
                                <div class="card-header">
                                    @if (i == 0)
                                    {
                                        <input type="radio" id="@addresses[i].ID" name="RegisteredUserCreate" value="@addresses[i].ID" checked />
                                    }
                                    else
                                    {
                                        <input type="radio" id="@addresses[i].ID" name="RegisteredUserCreate" value="@addresses[i].ID" />
                                    }

                                    Address @(i + 1)
                                </div>
                                <div class="card-body">
                                    <p class="card-text">Zip code: @addresses[i].ZipCode</p>
                                    <p class="card-text">City: @addresses[i].City</p>
                                    <p class="card-text">Street: @addresses[i].Street</p>
                                    <p class="card-text">Hous number @addresses[i].HouseNumber</p>
                                </div>
                            </div>
                        }
                        <div>E-mail: @currentUser.UserEmail</div>
                    }


                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Confirm" class="btn  btn-primary" />
                        </div>
                    </div>
                </div>
            }


        </div>
    </div>

